=============================================
Build nVidia Driver
=============================================
DRIVER_VERSION='375.26'

sh NVIDIA-Linux-x86_64-"$DRIVER_VERSION".run --extract-only
mv NVIDIA-Linux-x86_64-"$DRIVER_VERSION" NVIDIA-Linux
cd NVIDIA-Linux
rm tls_test_dso.so

mkdir -p ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/lib32
mkdir -p ../nvidia/usr/lib/x86_64-linux-gnu/vdpau
mkdir -p ../nvidia/usr/lib/i386-linux-gnu/vdpau
mkdir -p ../nvidia/usr/bin
mkdir -p ../nvidia/usr/src
mkdir -p ../nvidia/usr/share/man/man1
mkdir -p ../nvidia/usr/share/applications
mkdir -p ../nvidia/usr/share/pixmaps
mkdir -p ../nvidia/usr/share/glvnd/egl_vendor.d
mkdir -p ../nvidia/etc/OpenCL/vendors
mkdir -p ../nvidia/etc/nvidia
mkdir -p ../nvidia/usr/share/vulkan/icd.d
mkdir -p ../nvidia/etc/modprobe.d
mkdir -p ../nvidia/DEBIAN

mv nvidia-cuda-mps-control ../nvidia/usr/bin/
mv nvidia-cuda-mps-server ../nvidia/usr/bin/
mv nvidia-debugdump ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/
mv nvidia-installer ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/
mv nvidia-modprobe ../nvidia/usr/bin/
mv nvidia-persistenced ../nvidia/usr/bin/
mv nvidia-settings ../nvidia/usr/bin/
mv nvidia-smi ../nvidia/usr/bin/
mv nvidia-xconfig ../nvidia/usr/bin/

mv libvdpau_nvidia.so."$DRIVER_VERSION" ../nvidia/usr/lib/x86_64-linux-gnu/vdpau
mv *.so."$DRIVER_VERSION" ../nvidia/usr/lib/x86_64-linux-gnu/
mv *.so.* ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/
mv *.so ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/
mv *.la ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/
mv tls ../nvidia/usr/lib/x86_64-linux-gnu/

mv 32/libvdpau_nvidia.so."$DRIVER_VERSION" ../nvidia/usr/lib/i386-linux-gnu/vdpau
mv 32/*.so."$DRIVER_VERSION" ../nvidia/usr/lib/i386-linux-gnu/
mv 32/*.so.* ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/lib32/
mv 32/*.la ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/lib32/
mv 32/tls ../nvidia/usr/lib/i386-linux-gnu/

mv *.1.gz ../nvidia/usr/share/man/man1/
mv nvidia-settings.png ../nvidia/usr/share/pixmaps/
mv 10_nvidia.json ../nvidia/usr/share/glvnd/egl_vendor.d/

mv nvidia.icd ../nvidia/etc/OpenCL/vendors/
mv nvidia-bug-report.sh ../nvidia/usr/lib/nvidia/"$DRIVER_VERSION"/
mv nvidia_icd.json ../nvidia/usr/share/vulkan/icd.d/

mv nvidia-drm-outputclass.conf ../nvidia/etc/nvidia/
echo 'blacklist nouveau' > ../nvidia/etc/modprobe.d/nvidia.conf
echo 'nvidia-drm' > ../nvidia/etc/nvidia/nvidia-load.conf

echo 'install nvidia modprobe -i nvidia $CMDLINE_OPTS' > ../nvidia/etc/nvidia/nvidia-modprobe.conf
echo 'install nvidia-modeset modprobe nvidia ; modprobe -i nvidia-modeset $CMDLINE_OPTS' >> ../nvidia/etc/nvidia/nvidia-modprobe.conf
echo 'install nvidia-drm modprobe nvidia-modeset ; modprobe -i nvidia-current-drm $CMDLINE_OPTS' >> ../nvidia/etc/nvidia/nvidia-modprobe.conf
echo 'install nvidia-uvm modprobe nvidia ; modprobe -i nvidia-uvm $CMDLINE_OPTS' >> ../nvidia/etc/nvidia/nvidia-modprobe.conf
cat >> ../nvidia/etc/nvidia/nvidia-modprobe.conf << EOF
remove nvidia modprobe -r -i nvidia-drm nvidia-modeset nvidia-uvm nvidia

# These aliases are defined in *all* nvidia modules.
# Duplicating them here sets higher precedence and ensures the selected
# module gets loaded instead of a random first match if more than one
# version is installed. See #798207.
alias	pci:v000010DEd00000E00sv*sd*bc04sc80i00*	nvidia
alias	pci:v000010DEd00000AA3sv*sd*bc0Bsc40i00*	nvidia
alias	pci:v000010DEd*sv*sd*bc03sc02i00*		nvidia
alias	pci:v000010DEd*sv*sd*bc03sc00i00*		nvidia
EOF


###########################################
### 模組補釘
###########################################
sed -i s/__VERSION_STRING/"$DRIVER_VERSION"/g kernel/dkms.conf
sed -i /__DKMS_MODULES/d kernel/dkms.conf
sed -i /NV_EXCLUDE_BUILD_MODULES/d kernel/dkms.conf
echo 'MAKE[0]="unset ARCH; env NV_VERBOSE=1 make ${parallel_jobs+-j$parallel_jobs} modules KERNEL_UNAME=${kernelver}"' >> kernel/dkms.conf
echo 'CLEAN="make KERNEL_UNAME=${kernelver} clean"' >> kernel/dkms.conf
echo 'BUILT_MODULE_NAME[0]="nvidia"' >> kernel/dkms.conf
echo 'DEST_MODULE_NAME[0]="$PACKAGE_NAME"' >> kernel/dkms.conf
echo 'DEST_MODULE_LOCATION[0]="/updates/dkms"' >> kernel/dkms.conf
echo 'BUILT_MODULE_NAME[1]="nvidia-modeset"' >> kernel/dkms.conf
echo 'DEST_MODULE_NAME[1]="$PACKAGE_NAME-modeset"' >> kernel/dkms.conf
echo 'DEST_MODULE_LOCATION[1]="/updates/dkms"' >> kernel/dkms.conf
echo 'BUILT_MODULE_NAME[2]="nvidia-drm"' >> kernel/dkms.conf
echo 'DEST_MODULE_NAME[2]="$PACKAGE_NAME-drm"' >> kernel/dkms.conf
echo 'DEST_MODULE_LOCATION[2]="/updates/dkms"' >> kernel/dkms.conf
echo 'BUILT_MODULE_NAME[3]="nvidia-uvm"' >> kernel/dkms.conf
echo 'DEST_MODULE_NAME[3]="$PACKAGE_NAME-uvm"' >> kernel/dkms.conf
echo 'DEST_MODULE_LOCATION[3]="/updates/dkms"' >> kernel/dkms.conf

wget http://http.debian.net/debian/pool/non-free/n/nvidia-graphics-drivers/nvidia-graphics-drivers_375.82-1~deb9u1.debian.tar.xz
tar Jxvf nvidia-graphics-drivers_375.82-1~deb9u1.debian.tar.xz
cp -r debian/module/debian/patches .
cd kernel
patch -p0 -i patches/do-div-cast.patch
patch -p0 -i patches/nvidia-drm-master-dev.patch
patch -p0 -i patches/use-kbuild-compiler.patch
patch -p0 -i patches/use-kbuild-flags.patch
patch -p0 -i patches/conftest-verbose.patch
patch -p0 -i patches/cc_version_check-gcc5.patch
patch -p0 -i patches/nvidia-use-ARCH.o_binary.patch
patch -p0 -i patches/nvidia-modeset-use-ARCH.o_binary.patch
mv a ../nvidia/usr/src/nvidia-"$DRIVER_VERSION"



###########################################
### 額外建立
###########################################
cat > ../nvidia/usr/share/applications/nvidia-settings.desktop << EOF
[Desktop Entry]
Version=1.0
Type=Application
Exec=nvidia-settings
Terminal=false
Categories=HardwareSettings;System;Settings;
Icon=nvidia-settings
Name=NVIDIA X Server Settings
Comment=Configure NVIDIA X Server Settings

# Translations provided by Sun Microsystems
Name[de]=NVIDIA X-Server-Einstellungen
Name[es]=Valores de configuración del servidor NVIDIA X
Name[fr]=Paramètres du serveur X NVIDIA
Name[it]=NVIDIA X Server Settings
Name[ja]=NVIDIA X サーバー設定
Name[ko]=NVIDIA X 서버 설정
Name[pt_BR]=Configurações do NVIDIA X Server
Name[zh_CN]=NVIDIA X 服务器设置
Name[zh_HK]=NVIDIA X 伺服器設定
Name[zh_TW]=NVIDIA X 伺服器設定
Comment[de]=Konfigurieren der NVIDIA X-Server-Einstellungen
Comment[es]=Establezca los valores de configuración del servidor NVIDIA X
Comment[fr]=Configurer les paramètres du serveur X NVIDIA
Comment[it]=Configura NVIDIA X Server Settings
Comment[ja]=NVIDIA X サーバー設定を構成します
Comment[ko]=NVIDIA X 서버 설정 구성
Comment[pt_BR]=Definir &configurações de gerenciamento de usuário...
Comment[zh_CN]=配置 NVIDIA X 服务器设置
Comment[zh_HK]=配置 NVIDIA X 伺服器設定
Comment[zh_TW]=配置 NVIDIA X 伺服器設定
EOF

cat > ../nvidia/usr/lib/nvidia/$DRIVER_VERSION/libset << EOF
#!/bin/bash

DRIVER_VERSION='375.26'

echo '#!/bin/bash' > /usr/lib/nvidia/prerm
chmod 755 /usr/lib/nvidia/prerm

### Link 64-bit Libs
if [ ! -f "/usr/lib/x86_64-linux-gnu/libEGL.so.1" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libEGL.so.1 /usr/lib/x86_64-linux-gnu/libEGL.so.1
    echo 'rm /usr/lib/x86_64-linux-gnu/libEGL.so.1' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/x86_64-linux-gnu/libGLdispatch.so.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGLdispatch.so.0 /usr/lib/x86_64-linux-gnu/libGLdispatch.so.0
    echo 'rm /usr/lib/x86_64-linux-gnu/libGLdispatch.so.0' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/x86_64-linux-gnu/libGLESv1_CM.so.1" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGLESv1_CM.so.1 /usr/lib/x86_64-linux-gnu/libGLESv1_CM.so.1
    echo 'rm /usr/lib/x86_64-linux-gnu/libGLESv1_CM.so.1' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/x86_64-linux-gnu/libGLESv2.so.2" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGLESv2.so.2 /usr/lib/x86_64-linux-gnu/libGLESv2.so.2
    echo 'rm /usr/lib/x86_64-linux-gnu/libGLESv2.so.2' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/x86_64-linux-gnu/libGL.so.1.0.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGL.so.1.0.0 /usr/lib/x86_64-linux-gnu/libGL.so.1.0.0
    echo 'rm /usr/lib/x86_64-linux-gnu/libGL.so.1.0.0' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/x86_64-linux-gnu/libGLX.so.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGLX.so.0 /usr/lib/x86_64-linux-gnu/libGLX.so.0
    echo 'rm /usr/lib/x86_64-linux-gnu/libGLX.so.0' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/x86_64-linux-gnu/libOpenGL.so.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libOpenGL.so.0 /usr/lib/x86_64-linux-gnu/libOpenGL.so.0
    echo 'rm /usr/lib/x86_64-linux-gnu/libOpenGL.so.0' >> /usr/lib/nvidia/prerm
fi

### Link 32-bit Libs
if [ ! -f "/usr/lib/i386-linux-gnu/libEGL.so.1" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libEGL.so.1 /usr/lib/i386-linux-gnu/libEGL.so.1
    echo 'rm /usr/lib/i386-linux-gnu/libEGL.so.1' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/i386-linux-gnu/libGLdispatch.so.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGLdispatch.so.0 /usr/lib/i386-linux-gnu/libGLdispatch.so.0
    echo 'rm /usr/lib/i386-linux-gnu/libGLdispatch.so.0' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/i386-linux-gnu/libGLESv1_CM.so.1" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGLESv1_CM.so.1 /usr/lib/i386-linux-gnu/libGLESv1_CM.so.1
    echo 'rm /usr/lib/i386-linux-gnu/libGLESv1_CM.so.1' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/i386-linux-gnu/libGLESv2.so.2" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGLESv2.so.2 /usr/lib/i386-linux-gnu/libGLESv2.so.2
    echo 'rm /usr/lib/i386-linux-gnu/libGLESv2.so.2' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/i386-linux-gnu/libGL.so.1.0.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGL.so.1.0.0 /usr/lib/i386-linux-gnu/libGL.so.1.0.0
    echo 'rm /usr/lib/i386-linux-gnu/libGL.so.1.0.0' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/i386-linux-gnu/libGLX.so.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libGLX.so.0 /usr/lib/i386-linux-gnu/libGLX.so.0
    echo 'rm /usr/lib/i386-linux-gnu/libGLX.so.0' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/i386-linux-gnu/libOpenCL.so.1.0.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libOpenCL.so.1.0.0 /usr/lib/i386-linux-gnu/libOpenCL.so.1.0.0
    echo 'rm /usr/lib/i386-linux-gnu/libOpenCL.so.1.0.0' >> /usr/lib/nvidia/prerm
fi

if [ ! -f "/usr/lib/i386-linux-gnu/libOpenGL.so.0" ]; then
    ln -s /usr/lib/nvidia/$DRIVER_VERSION/libOpenGL.so.0 /usr/lib/i386-linux-gnu/libOpenGL.so.0
    echo 'rm /usr/lib/i386-linux-gnu/libOpenGL.so.0' >> /usr/lib/nvidia/prerm
fi

### Link nvidia so
rm /usr/lib/nvidia/nvidia_drv.so
ln -s /usr/lib/nvidia/$DRIVER_VERSION/nvidia_drv.so /usr/lib/nvidia/nvidia_drv.so
rm /usr/lib/nvidia/libglx.so
ln -s /usr/lib/x86_64-linux-gnu/libglx.so.$DRIVER_VERSION /usr/lib/nvidia/libglx.so
EOF

sed -i 's/\/375.26/\/$DRIVER_VERSION/g' ../nvidia/usr/lib/nvidia/$DRIVER_VERSION/libset
chmod 755 ../nvidia/usr/lib/nvidia/$DRIVER_VERSION/libset

###########################################
### 安裝腳本
###########################################
# Debian:
DEPS='debconf, debhelper, dkms, libc6, libc6-dev, libc6-i386, libegl1-mesa, libgl1-mesa-glx | libgl1, libvdpau1, libvulkan1, libwayland-client0, libwayland-server0, libx11-6, libxext6, make, pciutils, quilt, xserver-xorg-core, xz-utils'
# Ubuntu:
DEPS='acpid, adduser, dkms, lib32gcc1, libatk1.0-0, libc6, libc6-dev, libc6-i386, libcairo2, libcairo-gobject2, libfontconfig1, libfreetype6, libgdk-pixbuf2.0-0, libgl1-mesa-glx | libgl1, libglib2.0-0, libgtk2.0-0, libgtk-3-0, libjansson4, libpango-1.0-0, libpangocairo-1.0-0, libpangoft2-1.0-0, libvdpau1, libwayland-client0, libwayland-server0, libx11-6, libxext6, libxnvctrl0, libxxf86vm1, linux-libc-dev, make, passwd, patch, pkg-config, screen-resolution-extra, sed, x11-common, xserver-xorg-core, xserver-xorg-legacy'

### control
cat > ../nvidia/DEBIAN/control << EOF
Package: nvidia-375
Source: nvidia-graphics-drivers
Version: $DRIVER_VERSION
Architecture: amd64
Maintainer: Ubuntu Core Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Installed-Size: 337009
Depends: $DEPS
Conflicts: nvidia-persistenced, nvidia-smi, xorg-driver-binary
Replaces: nvidia-persistenced, nvidia-smi, xorg-driver-binary
Provides: nvidia-driver-binary, nvidia-persistenced, nvidia-smi, xorg-driver-binary, xorg-driver-video
Section: restricted/misc
Priority: optional
Description: NVIDIA binary driver - version $DRIVER_VERSION
 The binary driver provide optimized hardware acceleration of OpenGL
 applications via a direct-rendering X Server. AGP, PCIe, SLI, TV-out
 and flat panel displays are also supported.
 .
 This package also includes the source for building the kernel module
 required by the Xorg driver, and provides NVIDIA's implementation of
 the Video Decode and presentation API. The latter enables acceleration
 for GeForce 8 and later series cards for h264 video.
 .
 Release Notes and supported GPUs:
 http://www.nvidia.com/object/linux-display-amd64-$DRIVER_VERSION-driver.html
EOF


### prerm
cat > ../nvidia/DEBIAN/prerm << EOF
#!/bin/sh

# remove libs link
/usr/lib/nvidia/prerm

# remove kms
EOF
echo 'NAME=nvidia' >> ../nvidia/DEBIAN/prerm
echo "VERSION=$DRIVER_VERSION" >> ../nvidia/DEBIAN/prerm
echo 'dkms remove -m $NAME -v $VERSION --all' >> ../nvidia/DEBIAN/prerm
echo 'modprobe -r nvidia-drm' >> ../nvidia/DEBIAN/prerm
echo 'modprobe -r nvidia-modeset' >> ../nvidia/DEBIAN/prerm
echo 'modprobe -r nvidia' >> ../nvidia/DEBIAN/prerm
echo 'modprobe -r nvidia-uvm' >> ../nvidia/DEBIAN/prerm
echo 'rm /lib/modules/$(uname -r)/updates/dkms/nvidia*' >> ../nvidia/DEBIAN/prerm
echo 'depmod' >> ../nvidia/DEBIAN/prerm
echo 'update-initramfs -u' >> ../nvidia/DEBIAN/prerm
echo 'exit' >> ../nvidia/DEBIAN/prerm

chmod 755 ../nvidia/DEBIAN/prerm

### postrm
cat > ../nvidia/DEBIAN/postrm << EOF
#!/bin/sh

# remove nvidia dir
rm -rf /usr/lib/nvidia

exit
EOF

chmod 755 ../nvidia/DEBIAN/postrm

### postinst
cat > ../nvidia/DEBIAN/postinst << EOF
#!/bin/sh

NAME=nvidia
VERSION=$DRIVER_VERSION
EOF
echo 'KERNEL=$(uname -r)' >> ../nvidia/DEBIAN/postinst
echo 'dkms remove -m $NAME -v $VERSION --all' >> ../nvidia/DEBIAN/postinst
echo 'dkms install -m $NAME -v $VERSION -k $KERNEL' >> ../nvidia/DEBIAN/postinst
echo 'modprobe nvidia' >> ../nvidia/DEBIAN/postinst
echo 'modprobe nvidia-drm' >> ../nvidia/DEBIAN/postinst
echo 'modprobe nvidia-modeset' >> ../nvidia/DEBIAN/postinst
echo 'modprobe nvidia-uvm' >> ../nvidia/DEBIAN/postinst
echo 'depmod' >> ../nvidia/DEBIAN/postinst
echo 'update-initramfs -u' >> ../nvidia/DEBIAN/postinst
echo 'exit' >> ../nvidia/DEBIAN/postinst

chmod 755 ../nvidia/DEBIAN/postinst

