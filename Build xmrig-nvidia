##############################
### Build xmrig-nvidia
##############################
* 必要依賴
sudo apt-get install git build-essential cmake libuv1-dev libmicrohttpd-dev
sudo apt-get install gcc-5 g++-5

* 安裝CUDA
NVIDIA 官方版本:
https://developer.nvidia.com/cuda-toolkit-archive
套件庫版本安裝:
sudo apt-get install nvidia-cuda-dev nvidia-cuda-toolkit

* NVIDIA 官方版本 Patch:
sed -i '/unsupported GNU version/d' /opt/cuda/*/include/host_config.h

* NVIDIA CUDA 官方版變數:
CUDA_SOVERSION='8.0.44'
CUDA_BIN=/opt/cuda/$CUDA_SOVERSION/bin
CUDA_LIB=/opt/cuda/$CUDA_SOVERSION/lib
export PATH=$PATH:$CUDA_BIN
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUDA_LIB

* 切換GCC版本 (for nVidia CUDA)
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 40
sudo update-alternatives --config gcc
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 40
sudo update-alternatives --config g++
or
export CC=/usr/bin/gcc-5
export CXX=/usr/bin/g++-5
export CPP=/usr/bin/cpp-5
export AR=/usr/bin/gcc-ar-5
export NM=/usr/bin/gcc-nm-5
export RANLIB=/usr/bin/gcc-ranlib-5
alias g++=/usr/bin/g++-5
alias gcc=/usr/bin/gcc-5
alias cpp=/usr/bin/cpp-5
alias cc=/usr/bin/gcc-5
alias ar=/usr/bin/gcc-ar-5
alias nm=/usr/bin/gcc-nm-5
alias gcc-ar=/usr/bin/gcc-ar-5
alias gcc-nm=/usr/bin/gcc-nm-5
alias gcc-ranlib=/usr/bin/gcc-ranlib-5

* 編譯
git clone https://github.com/xmrig/xmrig-nvidia.git
cd xmrig-nvidia
# Donate Patch
sed -i 's/kDonateLevel = 5/kDonateLevel = 0/g' src/donate.h
sed -i s/'arg < 1 || arg > 99'/'arg < 0 || arg > 99'/g src/Options.cpp
sed -i s/'donate-level": 5'/'donate-level": 0'/g src/config.json

# Enable AES On Unsupported Processor (Need opemu)
sed -i 's/bit_AES .*/bit_AES 1/g' src/common/cpu/BasicCpuInfo.cpp

# Enable AVX2 On Unsupported Processor (Need opemu)
sed -i 's/bit_AVX2 .*/bit_AVX2 1/g' src/common/cpu/BasicCpuInfo.cpp
sed 's/EXTENDED_FEATURES,/PROCESSOR_INFO,/g' src/common/cpu/BasicCpuInfo.cpp
sed 's/EBX_Reg]/ECX_Reg]/g' src/common/cpu/BasicCpuInfo.cpp

mkdir build
cd build

cmake .. -DUV_LIBRARY=/usr/lib/x86_64-linux-gnu/libuv.a \
         -DCUDA_ARCH="20;30;32;35;37;50;52;53;60;61;62" \
         -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5
make

cp ../src/config.json .

==============================
CMake 額外選項
==============================
* Disable CryptoNight-Lite support:
-DWITH_AEON=OFF

* Build without built in http server and API:
-DWITH_HTTPD=OFF

* Use static libuv version:
-DUV_LIBRARY=/usr/lib/x86_64-linux-gnu/libuv.a

* 設定 GPU 架構:
請注意CUDA 9不支持Fermi GPU和CUDA 7.5不支持Pascal GPU。
CUDA SDK 6.5: Last version with support for compute capability 1.x (Tesla)
CUDA SDK 7.5 support for compute capability 2.0 – 5.x (Fermi, Kepler, Maxwell)
CUDA SDK 8.0 support for compute capability 2.0 – 6.x (Fermi, Kepler, Maxwell, Pascal), last version with support for Compute Capability 2.x (Fermi)
CUDA SDK 9.0 support for compute capability 3.0 – 7.x (Kepler, Maxwell, Pascal, Volta)

* CUDA 6.5
-DCUDA_ARCH="10;11;12;13"
* CUDA 7.5
-DCUDA_ARCH="20;30;32;35;37;50;52;53"
* CUDA 8
-DCUDA_ARCH="20;30;32;35;37;50;52;53;60;61;62"
* CUDA 9
-DCUDA_ARCH="30;32;35;37;50;52;53;60;61;62;70;71"
