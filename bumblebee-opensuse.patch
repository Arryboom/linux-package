diff -uNr Bumblebee.orig/conf/99-bumblebee-nvidia-dev.rules Bumblebee/conf/99-bumblebee-nvidia-dev.rules
--- Bumblebee.orig/conf/99-bumblebee-nvidia-dev.rules	2019-09-27 08:26:40.000000000 +0800
+++ Bumblebee/conf/99-bumblebee-nvidia-dev.rules	2019-09-27 08:58:43.373854944 +0800
@@ -1,7 +1,10 @@
 # Put this file in /lib/udev/rules.d or /etc/udev/rules.d
 # Prevent the nvidia card from "randomly" turning on
-DEVPATH=="/module/nvidia", ACTION=="remove", RUN+="/bin/rm -f /dev/nvidiactl /dev/nvidia0 /dev/nvidia1"
+DEVPATH=="/module/nvidia", ACTION=="remove", RUN+="/bin/rm -f /dev/nvidiactl /dev/nvidia-modeset /dev/nvidia-uvm /dev/nvidia0 /dev/nvidia1"
 
 # Create devices files upon loading the module
 DEVPATH=="/module/nvidia", ACTION=="add", RUN+="/bin/mknod -m 666 /dev/nvidiactl c 195 255"
 DEVPATH=="/module/nvidia", ACTION=="add", RUN+="/bin/mknod -m 666 /dev/nvidia0   c 195 0"
+
+# Create uvm device
+KERNEL=="nvidia_uvm", RUN+="/bin/bash -c '/bin/mknod -m 666 /dev/nvidia-uvm c $(grep nvidia-uvm /proc/devices | cut -d \  -f 1) 0;'"
diff -uNr Bumblebee.orig/src/bbsecondary.c Bumblebee/src/bbsecondary.c
--- Bumblebee.orig/src/bbsecondary.c	2019-09-27 08:26:40.000000000 +0800
+++ Bumblebee/src/bbsecondary.c	2019-09-27 08:58:43.377854944 +0800
@@ -119,6 +119,24 @@
     if (!module_load(module_name, driver_name)) {
       set_bb_error("Could not load GPU driver");
       return false;
+    } else {
+      /* XXX NVIDIA UVM-DRM support */
+      if (strstr(module_name, "nvidia")) { /* We are using NVIDIA's proprietary driver */
+        char drm_module_name[1024];
+        sprintf(drm_module_name, "%s-drm", module_name);
+        if (!module_load(drm_module_name, "nvidia_drm")) {
+          char log_string[1024];
+          sprintf(log_string, "Cannot load DRM module: %s\n", drm_module_name);
+          bb_log(LOG_ERR, log_string);
+        }
+        char uvm_module_name[1024];
+        sprintf(uvm_module_name, "%s-uvm", module_name);
+        if (!module_load(uvm_module_name, "nvidia_uvm")) {
+          char log_string[1024];
+          sprintf(log_string, "Cannot load UVM module: %s\n", uvm_module_name);
+          bb_log(LOG_ERR, log_string);
+        }
+      }
     }
   }
   return true;
@@ -138,7 +156,7 @@
   if (!bb_is_running(bb_status.x_pid)) {
     char pci_id[12];
     static char *x_conf_file;
-    snprintf(pci_id, 12, "PCI:%02x:%02x:%o", pci_bus_id_discrete->bus,
+    snprintf(pci_id, 12, "PCI:%02d:%02d:%o", pci_bus_id_discrete->bus,
             pci_bus_id_discrete->slot, pci_bus_id_discrete->func);
     if (!x_conf_file) {
       x_conf_file = xorg_path_w_driver(bb_config.x_conf_file, bb_config.driver);
@@ -232,6 +250,12 @@
       }
       /* unload the driver loaded by the graphica card */
       if (pci_get_driver(driver, pci_bus_id_discrete, sizeof driver)) {
+        /* XXX NVIDIA UVM,MODESET support */
+        if (strstr(driver, "nvidia")) {
+          module_unload("nvidia_drm");
+          module_unload("nvidia_modeset");
+          module_unload("nvidia_uvm");
+        }
         module_unload(driver);
       }
 
