#############################################
### Install Openindiana Live System to Local
#############################################
ROOT_POOL=rpool
DISK_NAME=c4t0d0

NODENAME=$(uname -n)
HOSTNAME=$(uname -n)
LANG=zh_TW
TIMEZONE=Asia/Taipei

USERNAME=mint
REALNAME'Mint Fans'
ICT_USER_GID=10
ICT_USER_UID=101
ROOT_PASS=0000
USER_PASS=0000

# get encrypted password
python > /dev/null << EOF
from osol_install.install_utils import encrypt_password
root_passwd_text = "$ROOT_PASS"
user_passwd_text = "$USER_PASS"
encrypted_root_passwd = encrypt_password(root_passwd_text, alt_root=None)
passwd_file = open("/tmp/root-pw", "w+")
passwd_file.write(encrypted_root_passwd + "\n")
passwd_file.close()
encrypted_user_passwd = encrypt_password(user_passwd_text, alt_root=None)
passwd_file = open("/tmp/user-pw", "w+")
passwd_file.write(encrypted_root_passwd + "\n")
passwd_file.close()
EOF

ICT=/opt/install-test/bin/ict_test
ICT_ROOT_PASS=$(cat /tmp/root-pw)
ICT_USER_PASS=$(cat /tmp/user-pw)

CD_OBJECT=$(find /media -name solaris.zlib)
CDROM_DIR=$(dirname $CD_OBJECT)

# get disk name
echo | format

# Create MBR Partition
format

# Create GPT Partition
gdisk /dev/dsk/$DISK_NAME

############################################
### create zfs file system
############################################
# cleanup_existing_install_target
umount -f /var/run/boot_archive
zpool list $ROOT_POOL
rm -rf /a/*

# create_root_pool
zpool create -Bf $ROOT_POOL $DISK_NAME
or
zpool create -f $ROOT_POOL $DISK_NAME

zfs create -p rpool/ROOT/$NODENAME
zfs create -p rpool/ROOT/$NODENAME/var
zfs create -p rpool/export
zfs create -p rpool/export/home
zfs create -p rpool/export/home/$USERNAME

zfs umount rpool/export/home/$USERNAME
zfs umount rpool/export/home
zfs umount rpool/export
zfs umount rpool/ROOT/$NODENAME/var
zfs umount rpool/ROOT/$NODENAME

mkdir /a

zfs set mountpoint=legacy rpool/ROOT
zfs set mountpoint=/a rpool/ROOT/$NODENAME
zfs set mountpoint=/a/var rpool/ROOT/$NODENAME/var
zfs set mountpoint=/a/export rpool/export
zfs set mountpoint=/a/export/home rpool/export/home
zfs set mountpoint=/a/export/home/$USERNAME rpool/export/home/$USERNAME

zfs mount rpool/ROOT/$NODENAME
zfs mount rpool/ROOT/$NODENAME/var
zfs mount rpool/export
zfs mount rpool/export/home
zfs mount rpool/export/home/$USERNAME

# Clear ESP to be sure we do not have pool label there
zpool labelclear -f $DISK_NAME"s0"

# Create boot/grub directory for holding menu.lst file
mkdir -p /$ROOT_POOL/boot/grub

# Mark created pool as 'busy' (org.openindiana.caiman:install=busy)
zfs set org."$NODENAME".caiman:install=busy $ROOT_POOL

# swap size
# memory        type           required    size
# --------------------------------------------------
# <900mb        zvol           yes          0.5G (MIN_SWAP_SIZE)
# 900mb-1G      zvol            no          0.5G (MIN_SWAP_SIZE)
# 1G-64G        zvol            no          (0.5G-32G) 1/2 of memory
# >64G          zvol            no          32G (MAX_SWAP_SIZE)

# dump size
# memory        type            size
# --------------------------------------------------
# <0.5G         zvol            256MB (MIN_DUMP_SIZE)
# 0.5G-32G      zvol            256M-16G (1/2 of memory)
# >32G          zvol            16G (MAX_DUMP_SIZE)

MEM_SIZE=$(prtconf | grep Memory | awk '{print $3}')

SWAP_SIZE=1024m
DUMP_SIZE=1024m

zfs create -b 4096 -V $SWAP_SIZE rpool/swap
zfs create -b 131072 -V $DUMP_SIZE rpool/dump
or
dumpadm -d none

mkdir -p /$ROOT_POOL
zfs set mountpoint=none $ROOT_POOL
zfs set mountpoint=/$ROOT_POOL $ROOT_POOL
mkdir -p /$ROOT_POOL/boot/grub

############################################
### Install file system
############################################
# Install boot_archive
mkdir -p /tmp/ba_lofimnt

BA64_PATH="$CDROM_DIR/platform/i86pc/amd64/boot_archive"
BA32_PATH="$CDROM_DIR/platform/i86pc/boot_archive"

## Install boot_archive 32-bit
BOOT_ARCHIVE=$(echo $BA32_PATH)
gzcat $BOOT_ARCHIVE > /var/run/boot_archive
DEVS=$(lofiadm -a /var/run/boot_archive)
mount -o nologging $DEVS /tmp/ba_lofimnt

cd /tmp/ba_lofimnt; find . | /usr/bin/cpio -pdum /a

cd ..
umount /tmp/ba_lofimnt
lofiadm -d $DEVS
rm /var/run/boot_archive

## Install boot_archive 64-bit
BOOT_ARCHIVE=$(echo $BA64_PATH)
gzcat $BOOT_ARCHIVE > /var/run/boot_archive
DEVS=$(lofiadm -a /var/run/boot_archive)
mount -o nologging $DEVS /tmp/ba_lofimnt

cd /tmp/ba_lofimnt; find . | /usr/bin/cpio -pdum /a
cd ..
umount /tmp/ba_lofimnt
lofiadm -d $DEVS
rm /var/run/boot_archive

rm -r /tmp/ba_lofimnt

# install solaris.zlib
mkdir /tmp/solaris
DEVS=$(lofiadm -a $CDROM_DIR/solaris.zlib)
mount -F hsfs $DEVS /tmp/solaris
cd /tmp/solaris; find . | /usr/bin/cpio -pdum /a/usr

cd ..
umount /tmp/solaris
lofiadm -d $DEVS
rm -r /tmp/solaris

# install solarismisc.zlib
mkdir /tmp/solarismisc
DEVS=$(lofiadm -a $CDROM_DIR/solarismisc.zlib)
mount -F hsfs $DEVS /tmp/solarismisc
cd /tmp/solarismisc; find . | /usr/bin/cpio -pdum /a

cd ..
umount /tmp/solarismisc
lofiadm -d $DEVS
rm -r /tmp/solarismisc

# install original config
cd $CDROM_DIR/save; find . | /usr/bin/cpio -pdum /a

############################################
### Post Install Settings
############################################
if [ ! -f "$ICT" ]; then
    cd /tmp
    wget --no-check-certificate https://raw.githubusercontent.com/Mint-Fans/linux-package/Solaris/ict_test.tar
    tar xvf ict_test.tar
    ICT=/tmp/ict_test
    chmod 755 $ICT
fi

# Setting Timezone
/usr/gnu/bin/sed -i '/TZ=/d' /a/etc/default/init
echo "TZ=$TIMEZONE" >> /a/etc/default/init

# System config
$ICT ict_set_lang_locale /a "$LANG".UTF-8 0
$ICT ict_configure_user_directory /a $USERNAME
$ICT ict_set_host_node_name /a $HOSTNAME
$ICT ict_set_user_profile /a $USERNAME

# setting boot
zpool set bootfs=rpool/ROOT/$NODENAME rpool

# Install bootloader
$ICT ict_installboot "/a" "rpool"

$ICT ict_set_user_role /a 1 $USERNAME

/sbin/install-finish -B /a -R $ICT_ROOT_PASS -n "$REALNAME" -l $USERNAME -p $ICT_USER_PASS -G $ICT_USER_GID -U $ICT_USER_UID

$ICT ict_snapshot $NODENAME install

$ICT ict_mark_root_pool_ready rpool
or
zfs set org."$NODENAME".caiman:install=ready rpool

zfs unmount rpool/export/home/$USERNAME
zfs unmount rpool/export/home
zfs unmount rpool/export
zfs unmount rpool/ROOT/$NODENAME/var
zfs unmount rpool/ROOT/$NODENAME

zfs set mountpoint=/export/home/$USERNAME rpool/export/home/$USERNAME
zfs set mountpoint=/export/home rpool/export/home
zfs set mountpoint=/export rpool/export
zfs set mountpoint=/var rpool/ROOT/$NODENAME/var
zfs set mountpoint=/ rpool/ROOT/$NODENAME
