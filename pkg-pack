#!/bin/bash

if [ -f "/usr/bin/leafpad" ]; then
    TXTEDITOR=/usr/bin/leafpad
elif [ -f "/usr/bin/pluma" ]; then
    TXTEDITOR=/usr/bin/pluma
else
    TXTEDITOR=/usr/bin/gedit
fi

#####################################
script_fun(){
echo -e ""
echo -e "    Create Depend info"
echo -e ""
echo -e "    for example: "
echo -e "    #!/sbin/sh"
echo -e "    ............."
echo -e ""
echo -e "    Whether to continue?[y/n]"
echo -e ""
read SCRIPT
[[ "$SCRIPT" ]]
if [ "$SCRIPT" == "y" ]; then
    mkdir -p /var/spool/pkg/"$PKGCODE"/install
    "$TXTEDITOR" /var/spool/pkg/"$PKGCODE"/install/postinstall
    "$TXTEDITOR" /var/spool/pkg/"$PKGCODE"/install/postremove
fi
}

#####################################
depend_fun(){
echo -e ""
echo -e "    Create Depend info"
echo -e ""
echo -e "    for example: "
echo -e "    R <PKG> <Description>"
echo -e "    R SUNWgcmn Common GNU package"
echo -e ""
echo -e "    Whether to continue?[y/n]"
echo -e ""
read DEP
[[ "$DEP" ]]
if [ "$DEP" == "y" ]; then
    mkdir -p /var/spool/pkg/"$PKGCODE"/install
    "$TXTEDITOR" /var/spool/pkg/"$PKGCODE"/install/depend
fi
}

#####################################
pkginfo_fun(){
clear
echo -e ""
echo -e "    Enter the package name"
echo -e ""
read NAMES
[[ "$NAMES" ]]

if [ "$NAMES" == "" ]; then
    echo -e "   The PKG Name is not entered"
    exit
fi

NAME=$(echo $NAMES | sed 's/+//g')

echo -e ""
echo -e "    Enter the package version"
echo -e ""
read VER
[[ "$VER" ]]

if [ "$VER" == "" ]; then
    echo -e "   The PKG version is not entered"
    exit
fi

echo -e ""
echo -e "    Enter the package base directory"
echo -e ""
echo -e "    for example: /usr or /usr/local or /usr/apache"
echo -e ""
read INSTDIR
[[ "$INSTDIR" ]]

if [ "$INSTDIR" == "" ]; then
    INSTDIR=/usr/local
fi

PKGCODE=SUNW"$NAME"

echo "PKG=$PKGCODE" > pkginfo
echo "NAME=$NAME" >> pkginfo
echo "ARCH=i386" >> pkginfo
echo "VERSION=$VER" >> pkginfo
echo "CATEGORY=application" >> pkginfo
echo "VENDOR=Oracle Corporation" >> pkginfo
echo "EMAIL=master@localhost.com" >> pkginfo
echo "PSTAMP=Remake Team" >> pkginfo
echo "BASEDIR=$INSTDIR" >> pkginfo
echo "CLASSES=none" >> pkginfo

}

#####################################
repack_fun(){
cd "$PKGDIR"
chown -R root:root *
chown -R root:sys etc
chown -R root:sys opt
chown -R root:sys usr
chown -R root:sys var
chown -R root:bin usr/bin
chown -R root:bin usr/sbin
chown -R root:bin usr/lib
chown -R root:root usr/local
chown -R root:sys usr/share
chown -R root:bin opt/bin
chown -R root:bin opt/lib
chown -R root:bin opt/sbin
chown -R root:sys opt/share
chown -R root:bin usr/local/bin
chown -R root:bin usr/local/sbin
chown -R root:bin usr/local/lib
chown -R root:sys usr/local/share

# create prototype
find . -print | pkgproto > prototype
echo "i pkginfo=./pkginfo" >> prototype

# create pkginfo
pkginfo_fun

pkgmk -o -r "$PKGDIR"

/usr/gnu/bin/sed -i '/prototype/d' /var/spool/pkg/*/pkgmap
rm /var/spool/pkg/*/reloc/prototype

# create Depend
depend_fun
# create Install Script
script_fun

OSVER=$(pkg list entire | grep entire | awk '{print $2}')
mkdir -p $HOME/Documents/repack
pkgtrans -s /var/spool/pkg $HOME/Documents/repack/"$NAME"-"$VER"-"$OSVER".pkg
rm -rf /var/spool/pkg/*

}

#####################################
pkgpk_fun(){
clear
echo -e ""
echo -e "    Solaris PKG Repack"
echo -e ""
echo -e "    Enter the package root directory"
echo -e ""
read DIRPATH
[[ "$DIRPATH" ]]

PKGDIR=$(echo $DIRPATH | sed s/"'"//g)

if [ "$PKGDIR" == "" ]; then
    echo -e "   The PKG Directory is not entered"
    exit
else
    repack_fun
    echo -e "    PKG Repack is successful."
fi

}

#####################################
if [ "$EUID" == "0" ]; then
    pkgpk_fun
else
    echo "You must be "root" for pkg-pack to execute properly."
fi

