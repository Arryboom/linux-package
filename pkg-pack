#!/bin/bash



TXTEDITOR=gedit

#####################################
script_fun(){
echo -e ""
echo -e "    Make Depend info"
echo -e ""
echo -e "    for example: "
echo -e "    #!/sbin/sh"
echo -e "    ............."
echo -e ""
echo -e "    Whether to continue?[y/n]"
echo -e ""
read SCRIPT
[[ "$SCRIPT" ]]
if [ "$SCRIPT" == "y" ]; then
    mkdir -p /var/spool/pkg/"$PKGCODE"/install
    "$TXTEDITOR" /var/spool/pkg/"$PKGCODE"/install/postinstall
    "$TXTEDITOR" /var/spool/pkg/"$PKGCODE"/install/postremove
fi
}

#####################################
depend_fun(){
echo -e ""
echo -e "    Make Depend info"
echo -e ""
echo -e "    for example: "
echo -e "    P <PKG>x09<Description>"
echo -e "    P SUNWgcmn\\x09Common GNU package"
echo -e ""
echo -e "    Whether to continue?[y/n]"
echo -e ""
read DEP
[[ "$DEP" ]]
if [ "$DEP" == "y" ]; then
    mkdir -p /var/spool/pkg/"$PKGCODE"/install
    gedit /var/spool/pkg/"$PKGCODE"/install/depend
fi
}

#####################################
pkginfo_fun(){
clear
echo -e ""
echo -e "    Enter the package name"
echo -e ""
read NAME
[[ "$NAME" ]]

if [ "$NAME" == "" ]; then
    echo -e "   The PKG Name is not entered"
    exit
fi

echo -e ""
echo -e "    Enter the package version"
echo -e ""
read VER
[[ "$VER" ]]

if [ "$VER" == "" ]; then
    echo -e "   The PKG version is not entered"
    exit
fi

echo -e ""
echo -e "    Enter the package base directory"
echo -e ""
echo -e "    for example: /usr or /usr/local or /usr/apache"
echo -e ""
read INSTDIR
[[ "$INSTDIR" ]]

if [ "$INSTDIR" == "" ]; then
    INSTDIR=/usr/local
fi

PKGCODE=SMC"$NAME"

echo "PKG=$PKGCODE" > pkginfo
echo "NAME=$NAME" >> pkginfo
echo "ARCH=x86" >> pkginfo
echo "VERSION=$VER" >> pkginfo
echo "CATEGORY=application" >> pkginfo
echo "VENDOR=Oracle Corporation" >> pkginfo
echo "EMAIL=master@localhost.com" >> pkginfo
echo "PSTAMP=Remake Team" >> pkginfo
echo "BASEDIR=$INSTDIR" >> pkginfo
echo "CLASSES=none" >> pkginfo

}

#####################################
repack_fun(){
cd "$PKGDIR"
# make prototype
find . -print | pkgproto > prototype
echo "i pkginfo=./pkginfo" >> prototype

# make pkginfo
pkginfo_fun

pkgmk -o -r "$PKGDIR"

/usr/gnu/bin/sed -i '/prototype/d' /var/spool/pkg/*/pkgmap
rm /var/spool/pkg/*/reloc/prototype

# Make Depend
depend_fun
# Make Install Script
script_fun

mkdir -p /Documents/repack
pkgtrans -s /var/spool/pkg /Documents/repack/"$NAME"-"$VER"-sol10-x86-local
rm -rf /var/spool/pkg/*

}

#####################################
direct_pack_fun(){
FILENAME=$(cat "$PKGDIR"/pkginfo | grep NAME | sed s/.*=//)
FILEVER=$(cat "$PKGDIR"/pkginfo | grep VERSION | sed s/.*=//)
mkdir -p /Documents/repack
pkgtrans -s "$DIR" /Documents/repack/"$FILENAME"-"$FILEVER"-sol10-x86-local
rm -rf /Documents/pkg/*

}

#####################################
pkgpk_fun(){
clear
echo -e ""
echo -e "    Solaris 10 x86 PKG Repack"
echo -e ""
echo -e "    Enter the package root directory"
echo -e ""
read PKGDIR
[[ "$PKGDIR" ]]

DIR=$(dirname "$PKGDIR")

if [ "$PKGDIR" == "" ]; then
    echo -e "   The PKG Directory is not entered"
    exit
fi

if [ "$DIR" == "/Documents/pkg" ]; then
    direct_pack_fun
else
    repack_fun
fi

echo -e "    PKG Repack is successful."

exit

}

#####################################
pkgpk_fun
